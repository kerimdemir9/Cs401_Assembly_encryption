.data
newline: .asciiz "\n"
SboxCombined: .byte 0x02, 0x0F, 0x0C, 0x01, 0x05, 0x06, 0x0A, 0x0D, 0x0E, 0x08, 0x03, 0x04, 0x00, 0x0B, 0x09, 0x07, 0x0F, 0x04, 0x05, 0x08, 0x09, 0x07, 0x02, 0x01, 0x0A, 0x03, 0x00, 0x0E, 0x06, 0x0C, 0x0D, 0x0B, 0x04, 0x0A, 0x01, 0x06, 0x08, 0x0F, 0x07, 0x0C, 0x03, 0x00, 0x0E, 0x0D, 0x05, 0x09, 0x0B, 0x02, 0x07, 0x0C, 0x0E, 0x09, 0x02, 0x01, 0x05, 0x0F, 0x0B, 0x06, 0x0D, 0x00, 0x04, 0x08, 0x0A, 0x03 
Pbox: .byte 0x05, 0x07, 0x03, 0x04, 0x02, 0x06, 0x01, 0x00

keyVector: .word 0x2301, 0x6745, 0xAB89, 0xEFCD, 0xDCFE, 0x98BA, 0x5476, 0x1032
initialVector: .word 0x3412, 0x7856, 0xBC9A, 0xF0DE
stateVector: .word 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
plainText: .word 0x1100, 0x3322, 0x5544, 0x7766, 0x9988, 0xBBAA, 0xDDCC, 0xFFEE, 0x0
cipherText: .word 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0


.text
main:	
	
	jal init_func
	jal encryptAll
	
	la $a0, cipherText
	jal printArray
		
finish:		
	j exit

exit:
      	li $v0, 10
      	syscall


printArray:
    addi $sp, $sp, -12
    sw $ra, 8($sp)
    sw $s0, 4($sp)
    sw $s1, 0($sp)

    move $s0, $a0

printLoop:
    lw $s1, 0($s0)
    beqz $s1, end_printLoop

    addi $s0, $s0, 4
    move $a0, $s1
    jal printHex

    j printLoop

end_printLoop:
    lw $s1, 0($sp)
    lw $s0, 4($sp)
    lw $ra, 8($sp)
    addi $sp, $sp, 12

    jr $ra

printHex:
    li $v0, 34
    syscall

    la $a0, newline
    li $v0, 4
    syscall

    jr $ra
